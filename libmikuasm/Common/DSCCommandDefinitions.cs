using BinarySerialization;
using MikuASM.Common;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

//
// Based upon:
// - research by samyuu
// - https://github.com/Waelwindows/DIVA_Tools/blob/master/script/csharp/DIVALib/DSCUtils/DscFunc.cs
// 
// semi- <auto-generated/>

namespace MikuASM.Commands
{
#pragma warning disable 0169
#pragma warning disable 0649
    [CmdMnemonic(CommandNumbers.END, "END")]
    [CmdShortcut(".")]
    [AllowBinFlt] 
    public class Command_END : DSCCommand
    {

    }

    [CmdMnemonic(CommandNumbers.PV_END, "PV_END")]
    [CmdShortcut("$")]
    [AllowBinFlt]
    public class Command_PV_END : DSCCommand
    {

    }

    [CmdMnemonic(CommandNumbers.TIME, "TIME", 1)]
    [CmdShortcut("@", 1)]
    [AllowBinFlt]
    [CriticalBinFlt]
    public class Command_TIME : DSCCommand
    {
        public Command_TIME() { }
        public Command_TIME(UInt32 value)
        {
            Timestamp = value;
        }

        [CmdArg(0), FieldScale(100), TimeTransform]
        public UInt32 Timestamp;
    }

    [CmdMnemonic(CommandNumbers.TARGET, "TARGET", 7)]
    [AllowBinFlt]
    public class Command_TARGET : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public UInt32 Type;
        [FieldOrder(1), CmdArg(1)] public Int32 XPos;
        [FieldOrder(2), CmdArg(2)] public Int32 YPos;
        [FieldOrder(3), CmdArg(3)] public Int32 Angle;
        [FieldOrder(4), CmdArg(4)] public Int32 Distance;
        [FieldOrder(5), CmdArg(5)] public Int32 Amplitude;
        [FieldOrder(6), CmdArg(6)] public Int32 Oscillations;
    }

    [CmdMnemonic(CommandNumbers.LYRIC, "LYRIC", 1)]
    public class Command_LYRIC : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public uint Lyric_Num;
        [FieldOrder(1)] public Int32 color = -1; // unuse in FT
    }

    [CmdMnemonic(CommandNumbers.MOVIE_PLAY, "MOVIE_PLAY", 1)]
    public class Command_MOVIE_PLAY : DSCCommand
    {
        [FieldOrder(0), CmdArg(0), SerializeAs(SerializedType.UInt4), BoolTransform] public bool state;
    }

    [CmdMnemonic(CommandNumbers.MUSIC_PLAY, "MUSIC_PLAY")]
    [AllowBinFlt]
    public class Command_MUSIC_PLAY : DSCCommand
    {
    }

    [CmdMnemonic(CommandNumbers.MOVIE_DISP, "MOVIE_DISP", 1)]
    public class Command_MOVIE_DISP : DSCCommand
    {
        [FieldOrder(0), CmdArg(0), SerializeAs(SerializedType.UInt4), BoolTransform] public bool state;
    }

    [CmdMnemonic(CommandNumbers.CHANGE_FIELD, "CHANGE_FIELD", 1)]
    public class Command_CHANGE_FIELD : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public uint field_num;
    }

    [CmdMnemonic(CommandNumbers.CHARA_SIZE, "CHARA_SIZE", 2)]
    public class Command_CHARA_SIZE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_id;

        [FieldOrder(1), CmdArg(1)] public Int32 size;
    }

    [CmdMnemonic(CommandNumbers.TARGET_FLYING_TIME, "TARGET_FLYING_TIME", 1)]
    [AllowBinFlt]
    public class Command_TARGET_FLYING_TIME : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public uint flying_time;
    }

    // -------------- ^^^ bare minimum UPDC support ^^^ -----------------

    [CmdMnemonic(CommandNumbers.MIKU_MOVE, "MIKU_MOVE", 4)]
    public class Command_MIKU_MOVE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public uint player_id;
        [FieldOrder(1), CmdArg(1)] public Int32 x;
        [FieldOrder(2), CmdArg(2)] public Int32 y;
        [FieldOrder(3), CmdArg(3)] public Int32 z;
    }

    [CmdMnemonic(CommandNumbers.MIKU_ROT, "MIKU_ROT", 2)]
    public class Command_MIKU_ROT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public uint player_ID;
        [FieldOrder(1), CmdArg(1), FieldScale(1000)] public int orientation;
    }

    [CmdMnemonic(CommandNumbers.MIKU_DISP, "MIKU_DISP", 2)]
    public class Command_MIKU_DISP : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public uint player_ID;
        [FieldOrder(1), SerializeAs(SerializedType.UInt4), CmdArg(1), BoolTransform] public bool state;
    }

    [CmdMnemonic(CommandNumbers.MIKU_SHADOW, "MIKU_SHADOW", 2)]
    public class Command_MIKU_SHADOW : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public uint player_ID;

        [FieldOrder(1), SerializeAs(SerializedType.UInt4), CmdArg(1), BoolTransform] public bool state;
    }

    [CmdMnemonic(CommandNumbers.SET_MOTION, "SET_MOTION", 4)]
    public class Command_SET_MOTION : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public int player_ID;
        [FieldOrder(1), CmdArg(1)] public uint motion_ID;
        [FieldOrder(2), FieldScale(100), SerializeAs(SerializedType.Int4), CmdArg(2)] public double time;
        [FieldOrder(3), CmdArg(3)] public int speed;
    }

    [CmdMnemonic(CommandNumbers.SET_PLAYDATA, "SET_PLAYDATA", 2)]
    // TODO: CmdDesc
    public class Command_SET_PLAYDATA : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public uint playerID;
        [FieldOrder(1), CmdArg(1)] public uint mode;
    }

    [CmdMnemonic(CommandNumbers.EFFECT, "EFFECT", 6)]
    // TODO: CmdDesc
    public class Command_EFFECT : DSCCommand
    {
        [FieldOrder(1), CmdArg(0)] public Int32 effect_slot;
        [FieldOrder(2), CmdArg(1)] public Int32 unk2;
        [FieldOrder(3), CmdArg(2)] public Int32 unk3;
        [FieldOrder(4), CmdArg(3)] public Int32 unk4;
        [FieldOrder(5), CmdArg(4)] public Int32 unk5;
        [FieldOrder(6), CmdArg(5)] public Int32 unk6;
    }

    [CmdMnemonic(CommandNumbers.FADEIN_FIELD, "FADEIN_FIELD", 2)]
    public class Command_FADEIN_FIELD : DSCCommand
    {
        [FieldOrder(1), CmdArg(0)] public Int32 unk1;
        [FieldOrder(2), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.EFFECT_OFF, "EFFECT_OFF", 1)]
    public class Command_EFFECT_OFF : DSCCommand
    {
        [FieldOrder(1), CmdArg(0)] public Int32 effect_slot;
    }

    [CmdMnemonic(CommandNumbers.SET_CAMERA, "SET_CAMERA", 6)]
    public class Command_SET_CAMERA : DSCCommand
    {
        // ------------ TODO: Confirm!
        [FieldOrder(0), CmdArg(0)] public Int32 x;
        [FieldOrder(1), CmdArg(1)] public Int32 y;
        [FieldOrder(2), CmdArg(2)] public Int32 z;
        [FieldOrder(3), CmdArg(3)] public Int32 fx;
        [FieldOrder(4), CmdArg(4)] public Int32 fy;
        [FieldOrder(5), CmdArg(5)] public Int32 fz;
    }

    [CmdMnemonic(CommandNumbers.DATA_CAMERA, "DATA_CAMERA", 2)]
    public class Command_DATA_CAMERA : DSCCommand
    {
        [FieldOrder(1), CmdArg(0)] public Int32 unk1;
        [FieldOrder(2), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.HIDE_FIELD, "HIDE_FIELD", 1)]
    public class Command_HIDE_FIELD : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public uint state;
    }

    [CmdMnemonic(CommandNumbers.MOVE_FIELD, "MOVE_FIELD", 3)]
    public class Command_MOVE_FIELD : DSCCommand
    {
        [FieldOrder(1), CmdArg(0)] public Int32 unk1;
        [FieldOrder(2), CmdArg(1)] public Int32 unk2;
        [FieldOrder(3), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.FADEOUT_FIELD, "FADEOUT_FIELD", 2)]
    public class Command_FADEOUT_FIELD : DSCCommand
    {
        [FieldOrder(1), CmdArg(0)] public Int32 unk1;
        [FieldOrder(2), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.EYE_ANIM, "EYE_ANIM", 3)]
    public class Command_EYE_ANIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 animation_ID;
        [FieldOrder(2), CmdArg(2)] public Int32 unk;
    }

    [CmdMnemonic(CommandNumbers.MOUTH_ANIM, "MOUTH_ANIM", 5)]
    public class Command_MOUTH_ANIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 animation_ID;
        [FieldOrder(2), CmdArg(2)] public Int32 unk;
        [FieldOrder(3), CmdArg(3)] public Int32 start;
        [FieldOrder(4), CmdArg(4)] public Int32 speed;
    }

    [CmdMnemonic(CommandNumbers.HAND_ANIM, "HAND_ANIM", 5)]
    public class Command_HAND_ANIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 animation_ID;
        [FieldOrder(2), CmdArg(2)] public Int32 unk;
        [FieldOrder(3), CmdArg(3)] public Int32 start;
        [FieldOrder(4), CmdArg(4)] public Int32 speed;
    }

    [CmdMnemonic(CommandNumbers.LOOK_ANIM, "LOOK_ANIM", 4)]
    public class Command_LOOK_ANIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
    }

    [CmdMnemonic(CommandNumbers.EXPRESSION, "EXPRESSION", 4)]
    public class Command_EXPRESSION : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 expression;
        [FieldOrder(2), CmdArg(2)] public Int32 start;
        [FieldOrder(3), CmdArg(3)] public Int32 speed;
    }

    [CmdMnemonic(CommandNumbers.LOOK_CAMERA, "LOOK_CAMERA", 5)]
    public class Command_LOOK_CAMERA : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
        [FieldOrder(4), CmdArg(4)] public Int32 unk5;
    }

    [CmdMnemonic(CommandNumbers.MODE_SELECT, "MODE_SELECT", 2)]
    public class Command_MODE_SELECT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk;
        [FieldOrder(1), CmdArg(1)] public Int32 mode;
    }

    [CmdMnemonic(CommandNumbers.EDIT_MOTION, "EDIT_MOTION", 4)]
    public class Command_EDIT_MOTION : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
    }

    [CmdMnemonic(CommandNumbers.BAR_TIME_SET, "BAR_TIME_SET", 2)]
    public class Command_BAR_TIME_SET : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 bpm;
        [FieldOrder(1), CmdArg(1)] public Int32 notespeed;
    }

    [CmdMnemonic(CommandNumbers.SHADOWHEIGHT, "SHADOWHEIGHT", 2)]
    public class Command_SHADOWHEIGHT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 shadow_height;
    }

    [CmdMnemonic(CommandNumbers.EDIT_FACE, "EDIT_FACE", 1)]
    public class Command_EDIT_FACE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.MOVE_CAMERA, "MOVE_CAMERA", 21)]
    public class Command_MOVE_CAMERA : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public UInt32 duration_ms;
        [FieldOrder(1), CmdArg(1)] public Int32 startX;
        [FieldOrder(2), CmdArg(2)] public Int32 startY;
        [FieldOrder(3), CmdArg(3)] public Int32 startZ;
        [FieldOrder(4), CmdArg(4)] public Int32 startFocusX;
        [FieldOrder(5), CmdArg(5)] public Int32 startFocusY;
        [FieldOrder(6), CmdArg(6)] public Int32 startFocusZ;
        [FieldOrder(7), CmdArg(7)] public Int32 startNormalX;
        [FieldOrder(8), CmdArg(8)] public Int32 startNormalY;
        [FieldOrder(9), CmdArg(9)] public Int32 startNormalZ;
        [FieldOrder(10), CmdArg(10)] public Int32 endX;
        [FieldOrder(11), CmdArg(11)] public Int32 endY;
        [FieldOrder(12), CmdArg(12)] public Int32 endZ;
        [FieldOrder(13), CmdArg(13)] public Int32 endFocusX;
        [FieldOrder(14), CmdArg(14)] public Int32 endFocusY;
        [FieldOrder(15), CmdArg(15)] public Int32 endFocusZ;
        [FieldOrder(16), CmdArg(16)] public Int32 endNormalX;
        [FieldOrder(17), CmdArg(17)] public Int32 endNormalY;
        [FieldOrder(18), CmdArg(18)] public Int32 endNormalZ;
        [FieldOrder(19), CmdArg(19)] public Int32 easeIn;
        [FieldOrder(20), CmdArg(20)] public Int32 easeOut;
    }

    [CmdMnemonic(CommandNumbers.SHADOWPOS, "SHADOWPOS", 3)]
    public class Command_SHADOWPOS : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.EDIT_LYRIC, "EDIT_LYRIC", 2)]
    public class Command_EDIT_LYRIC : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.EDIT_TARGET, "EDIT_TARGET", 5)]
    public class Command_EDIT_TARGET : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
        [FieldOrder(4), CmdArg(4)] public Int32 unk5;
    }

    [CmdMnemonic(CommandNumbers.EDIT_MOUTH, "EDIT_MOUTH", 1)]
    public class Command_EDIT_MOUTH : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.SET_CHARA, "SET_CHARA", 1)]
    public class Command_SET_CHARA : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 selectedplayer_ID;
    }

    [CmdMnemonic(CommandNumbers.EDIT_MOVE, "EDIT_MOVE", 7)]
    public class Command_EDIT_MOVE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
        [FieldOrder(4), CmdArg(4)] public Int32 unk5;
        [FieldOrder(5), CmdArg(5)] public Int32 unk6;
        [FieldOrder(6), CmdArg(6)] public Int32 unk7;
    }

    [CmdMnemonic(CommandNumbers.EDIT_SHADOW, "EDIT_SHADOW", 1)]
    public class Command_EDIT_SHADOW : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 state;
    }

    [CmdMnemonic(CommandNumbers.EDIT_EYELID, "EDIT_EYELID", 1)]
    public class Command_EDIT_EYELID : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.EDIT_EYE, "EDIT_EYE", 2)]
    public class Command_EDIT_EYE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.EDIT_ITEM, "EDIT_ITEM", 1)]
    public class Command_EDIT_ITEM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.EDIT_EFFECT, "EDIT_EFFECT", 2)]
    public class Command_EDIT_EFFECT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 effectID;
        [FieldOrder(1), CmdArg(1)] public Int32 speed;
    }

    [CmdMnemonic(CommandNumbers.EDIT_DISP, "EDIT_DISP", 1)]
    public class Command_EDIT_DISP : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 state;
    }

    [CmdMnemonic(CommandNumbers.EDIT_HAND_ANIM, "EDIT_HAND_ANIM", 2)]
    public class Command_EDIT_HAND_ANIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.AIM, "AIM", 3)]
    public class Command_AIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.HAND_ITEM, "HAND_ITEM", 3)]
    public class Command_HAND_ITEM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.EDIT_BLUSH, "EDIT_BLUSH", 1)]
    public class Command_EDIT_BLUSH : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 blushID;
    }

    [CmdMnemonic(CommandNumbers.NEAR_CLIP, "NEAR_CLIP", 2)]
    public class Command_NEAR_CLIP : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.CLOTH_WET, "CLOTH_WET", 2)]
    public class Command_CLOTH_WET : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1), SerializeAs(SerializedType.Int4), PercentTransform(0, 1024)] public uint wet_level;
    }

    [CmdMnemonic(CommandNumbers.LIGHT_ROT, "LIGHT_ROT", 3)]
    public class Command_LIGHT_ROT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.SCENE_FADE, "SCENE_FADE", 6)]
    public class Command_SCENE_FADE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 speed;
        [FieldOrder(1), CmdArg(1)] public Int32 fadeIn;
        [FieldOrder(2), CmdArg(2)] public Int32 fadeOut;
        [FieldOrder(3), CmdArg(3)] public Int32 red;
        [FieldOrder(4), CmdArg(4)] public Int32 green;
        [FieldOrder(5), CmdArg(5)] public Int32 blue;
    }

    [CmdMnemonic(CommandNumbers.TONE_TRANS, "TONE_TRANS", 6)]
    public class Command_TONE_TRANS : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
        [FieldOrder(4), CmdArg(4)] public Int32 unk5;
        [FieldOrder(5), CmdArg(5)] public Int32 unk6;
    }

    [CmdMnemonic(CommandNumbers.SATURATE, "SATURATE", 1)]
    public class Command_SATURATE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0), PercentTransform(0, 1024, true)] public UInt32 amount;
    }

    [CmdMnemonic(CommandNumbers.FADE_MODE, "FADE_MODE", 1)]
    public class Command_FADE_MODE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.AUTO_BLINK, "AUTO_BLINK", 2)]
    public class Command_AUTO_BLINK : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.PARTS_DISP, "PARTS_DISP", 3)]
    public class Command_PARTS_DISP : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.CHARA_HEIGHT_ADJUST, "CHARA_HEIGHT_ADJUST", 2)]
    public class Command_CHARA_HEIGHT_ADJUST : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 size;
    }

    [CmdMnemonic(CommandNumbers.ITEM_ANIM, "ITEM_ANIM", 4)]
    public class Command_ITEM_ANIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
    }

    [CmdMnemonic(CommandNumbers.CHARA_POS_ADJUST, "CHARA_POS_ADJUST", 4)]
    public class Command_CHARA_POS_ADJUST : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
    }

    [CmdMnemonic(CommandNumbers.SCENE_ROT, "SCENE_ROT", 1)]
    public class Command_SCENE_ROT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.MOT_SMOOTH, "MOT_SMOOTH", 2)]
    public class Command_MOT_SMOOTH : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.PV_BRANCH_MODE, "PV_BRANCH_MODE", 1)]
    public class Command_PV_BRANCH_MODE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 branch;

        public Command_PV_BRANCH_MODE() { }
        public Command_PV_BRANCH_MODE(Int32 value)
        {
            branch = value;
        }
    }

    [CmdMnemonic(CommandNumbers.DATA_CAMERA_START, "DATA_CAMERA_START", 1)]
    public class Command_DATA_CAMERA_START : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.WIND, "WIND", 3)]
    public class Command_WIND : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 strength;
    }

    [CmdMnemonic(CommandNumbers.OSAGE_STEP, "OSAGE_STEP", 3)]
    public class Command_OSAGE_STEP : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.OSAGE_MV_CCL, "OSAGE_MV_CCL", 3)]
    public class Command_OSAGE_MV_CCL : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.CHARA_COLOR, "CHARA_COLOR", 2)]
    public class Command_CHARA_COLOR : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public byte red;
        [FieldOrder(2), CmdArg(2)] public byte green;
        [FieldOrder(3), CmdArg(3)] public byte blue;
        [FieldOrder(4), CmdArg(4)] public byte alpha;
    }

    [CmdMnemonic(CommandNumbers.SE_EFFECT, "SE_EFFECT", 1)]
    public class Command_SE_EFFECT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 sfxID;
    }

    [CmdMnemonic(CommandNumbers.EDIT_MOVE_XYZ, "EDIT_MOVE_XYZ", 9)]
    public class Command_EDIT_MOVE_XYZ : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public double p1X;
        [FieldOrder(1), CmdArg(1)] public double p1Y;
        [FieldOrder(2), CmdArg(2)] public double p1Z;
        [FieldOrder(3), CmdArg(3)] public double p2X;
        [FieldOrder(4), CmdArg(4)] public double p2Y;
        [FieldOrder(5), CmdArg(5)] public double p2Z;
        [FieldOrder(6), CmdArg(6)] public double p3X;
        [FieldOrder(7), CmdArg(7)] public double p3Y;
        [FieldOrder(8), CmdArg(8)] public double p3Z;
    }

    [CmdMnemonic(CommandNumbers.EDIT_EYELID_ANIM, "EDIT_EYELID_ANIM", 3)]
    public class Command_EDIT_EYELID_ANIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.EDIT_INSTRUMENT_ITEM, "EDIT_INSTRUMENT_ITEM", 2)]
    public class Command_EDIT_INSTRUMENT_ITEM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.EDIT_MOTION_LOOP, "EDIT_MOTION_LOOP", 4)]
    public class Command_EDIT_MOTION_LOOP : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 playerID;
        [FieldOrder(1), CmdArg(1)] public Int32 animation_ID;
        [FieldOrder(2), CmdArg(2), FieldScale(100), SerializeAs(SerializedType.Int4)] public double time;
        [FieldOrder(3), CmdArg(3)] public Int32 speed;
    }

    [CmdMnemonic(CommandNumbers.EDIT_EXPRESSION, "EDIT_EXPRESSION", 2)]
    public class Command_EDIT_EXPRESSION : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 expID;
        [FieldOrder(1), CmdArg(1)] public Int32 speed;
    }

    [CmdMnemonic(CommandNumbers.EDIT_EYE_ANIM, "EDIT_EYE_ANIM", 3)]
    public class Command_EDIT_EYE_ANIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.EDIT_MOUTH_ANIM, "EDIT_MOUTH_ANIM", 2)]
    public class Command_EDIT_MOUTH_ANIM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.EDIT_CAMERA, "EDIT_CAMERA", 24)]
    public class Command_EDIT_CAMERA : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public UInt32 duration_ms;
        [FieldOrder(1), CmdArg(1)] public Int32 startX;
        [FieldOrder(2), CmdArg(2)] public Int32 startY;
        [FieldOrder(3), CmdArg(3)] public Int32 startZ;
        [FieldOrder(4), CmdArg(4)] public Int32 startFocusX;
        [FieldOrder(5), CmdArg(5)] public Int32 startFocusY;
        [FieldOrder(6), CmdArg(6)] public Int32 startFocusZ;
        [FieldOrder(7), CmdArg(7)] public Int32 startWtfX;
        [FieldOrder(8), CmdArg(8)] public Int32 startWtfY;
        [FieldOrder(9), CmdArg(9)] public Int32 startWtfZ;
        [FieldOrder(10), CmdArg(10)] public Int32 endX;
        [FieldOrder(11), CmdArg(11)] public Int32 endY;
        [FieldOrder(12), CmdArg(12)] public Int32 endZ;
        [FieldOrder(13), CmdArg(13)] public Int32 endFocusX;
        [FieldOrder(14), CmdArg(14)] public Int32 endFocusY;
        [FieldOrder(15), CmdArg(15)] public Int32 endFocusZ;
        [FieldOrder(16), CmdArg(16)] public Int32 endWtfX;
        [FieldOrder(17), CmdArg(17)] public Int32 endWtfY;
        [FieldOrder(18), CmdArg(18)] public Int32 endWtfZ;
        [FieldOrder(19), CmdArg(19)] public Int32 focusPlayerNo;
        [FieldOrder(20), CmdArg(20)] public Int32 focusPlayerBodypartNo;
        [FieldOrder(21), CmdArg(21)] public Int32 accelX;
        [FieldOrder(22), CmdArg(22)] public Int32 accelY;
        [FieldOrder(23), CmdArg(23)] public Int32 accelZ;
    }

    [CmdMnemonic(CommandNumbers.EDIT_MODE_SELECT, "EDIT_MODE_SELECT", 1)]
    public class Command_EDIT_MODE_SELECT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.PV_END_FADEOUT, "PV_END_FADEOUT", 2)]
    public class Command_PV_END_FADEOUT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.TARGET_FLAG, "TARGET_FLAG", 1)]
    public class Command_TARGET_FLAG : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.ITEM_ANIM_ATTACH, "ITEM_ANIM_ATTACH", 3)]
    public class Command_ITEM_ANIM_ATTACH : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }
    [CmdMnemonic(CommandNumbers.SHADOW_RANGE, "SHADOW_RANGE", 1)]
    public class Command_SHADOW_RANGE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.HAND_SCALE, "HAND_SCALE", 3)]
    public class Command_HAND_SCALE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 player_ID;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.LIGHT_POS, "LIGHT_POS", 4)]
    public class Command_LIGHT_POS : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
    }

    [CmdMnemonic(CommandNumbers.FACE_TYPE, "FACE_TYPE", 1)]
    public class Command_FACE_TYPE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.SHADOW_CAST, "SHADOW_CAST", 2)]
    public class Command_SHADOW_CAST : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.EDIT_MOTION_F, "EDIT_MOTION_F", 6)]
    public class Command_EDIT_MOTION_F : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
        [FieldOrder(4), CmdArg(4)] public Int32 unk5;
        [FieldOrder(5), CmdArg(5)] public Int32 unk6;
    }

    [CmdMnemonic(CommandNumbers.FOG, "FOG", 3)]
    public class Command_FOG : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.BLOOM, "BLOOM", 2)]
    public class Command_BLOOM : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.COLOR_COLLE, "COLOR_COLLE", 3)]
    public class Command_COLOR_COLLE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.DOF, "DOF", 3)]
    public class Command_DOF : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.CHARA_ALPHA, "CHARA_ALPHA", 4)]
    public class Command_CHARA_ALPHA : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
    }

    [CmdMnemonic(CommandNumbers.AOTO_CAP, "AOTO_CAP", 1)]
    public class Command_AOTO_CAP : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.MAN_CAP, "MAN_CAP", 1)]
    public class Command_MAN_CAP : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
    }

    [CmdMnemonic(CommandNumbers.TOON, "TOON", 3)]
    public class Command_TOON : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.SHIMMER, "SHIMMER", 3)]
    public class Command_SHIMMER : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.ITEM_ALPHA, "ITEM_ALPHA", 4)]
    public class Command_ITEM_ALPHA : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
    }

    [CmdMnemonic(CommandNumbers.MOVIE_CUT_CHG, "MOVIE_CUT_CHG", 2)]
    public class Command_MOVIE_CUT_CHG : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }

    [CmdMnemonic(CommandNumbers.CHARA_LIGHT, "CHARA_LIGHT", 3)]
    public class Command_CHARA_LIGHT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }

    [CmdMnemonic(CommandNumbers.STAGE_LIGHT, "STAGE_LIGHT", 3)]
    public class Command_STAGE_LIGHT : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
    }
    [CmdMnemonic(CommandNumbers.AGEAGE_CTRL, "AGEAGE_CTRL", 8)]
    public class Command_AGEAGE_CTRL : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
        [FieldOrder(2), CmdArg(2)] public Int32 unk3;
        [FieldOrder(3), CmdArg(3)] public Int32 unk4;
        [FieldOrder(4), CmdArg(4)] public Int32 unk5;
        [FieldOrder(5), CmdArg(5)] public Int32 unk6;
        [FieldOrder(6), CmdArg(6)] public Int32 unk7;
        [FieldOrder(7), CmdArg(7)] public Int32 unk8;
    }

    [CmdMnemonic(CommandNumbers.PSE, "PSE", 2)]
    public class Command_PSE : DSCCommand
    {
        [FieldOrder(0), CmdArg(0)] public Int32 unk1;
        [FieldOrder(1), CmdArg(1)] public Int32 unk2;
    }
#pragma warning restore 0169
#pragma warning restore 0649
}

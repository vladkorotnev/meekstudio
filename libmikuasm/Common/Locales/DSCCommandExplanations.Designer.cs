//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MikuASM.Common.Locales {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DSCCommandExplanations {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DSCCommandExplanations() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MikuASM.Common.Locales.DSCCommandExplanations", typeof(DSCCommandExplanations).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Makes the character blink the eyes automatically.
        /// </summary>
        internal static string AUTO_BLINK {
            get {
                return ResourceManager.GetString("AUTO_BLINK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the clock speed of the engine (Legacy command?).
        /// </summary>
        internal static string BAR_TIME_SET {
            get {
                return ResourceManager.GetString("BAR_TIME_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recalls a stage from the specified slot in the PVDB.
        /// </summary>
        internal static string CHANGE_FIELD {
            get {
                return ResourceManager.GetString("CHANGE_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjusts the specified player&apos;s color.
        /// </summary>
        internal static string CHARA_COLOR {
            get {
                return ResourceManager.GetString("CHARA_COLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjusts the character&apos;s height.
        /// </summary>
        internal static string CHARA_HEIGHT_ADJUST {
            get {
                return ResourceManager.GetString("CHARA_HEIGHT_ADJUST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the size of the character for the specified player.
        /// </summary>
        internal static string CHARA_SIZE {
            get {
                return ResourceManager.GetString("CHARA_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the cloth wetness effect (darken) of the specified character.
        /// </summary>
        internal static string CLOTH_WET {
            get {
                return ResourceManager.GetString("CLOTH_WET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begins playback of camera data from the keyframe DB.
        /// </summary>
        internal static string DATA_CAMERA {
            get {
                return ResourceManager.GetString("DATA_CAMERA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the blush of the currently edited player.
        /// </summary>
        internal static string EDIT_BLUSH {
            get {
                return ResourceManager.GetString("EDIT_BLUSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animates the camera across specified points and time with acceleration.
        /// </summary>
        internal static string EDIT_CAMERA {
            get {
                return ResourceManager.GetString("EDIT_CAMERA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the visibility of the currently edited character.
        /// </summary>
        internal static string EDIT_DISP {
            get {
                return ResourceManager.GetString("EDIT_DISP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the currently edited player&apos;s face.
        /// </summary>
        internal static string EDIT_FACE {
            get {
                return ResourceManager.GetString("EDIT_FACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the visibility of the currently edited character shadow.
        /// </summary>
        internal static string EDIT_SHADOW {
            get {
                return ResourceManager.GetString("EDIT_SHADOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turns off the effect in the specified slot.
        /// </summary>
        internal static string EFFECT_OFF {
            get {
                return ResourceManager.GetString("EFFECT_OFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of file marker, finishes playback and ends the interpreter.
        /// </summary>
        internal static string END {
            get {
                return ResourceManager.GetString("END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the specified player to play an expression from the specified expression DB ID.
        /// </summary>
        internal static string EXPRESSION {
            get {
                return ResourceManager.GetString("EXPRESSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the specified player to animate the eyes with the specified animation.
        /// </summary>
        internal static string EYE_ANIM {
            get {
                return ResourceManager.GetString("EYE_ANIM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the specified player to animate the hands with the specified animation.
        /// </summary>
        internal static string HAND_ANIM {
            get {
                return ResourceManager.GetString("HAND_ANIM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hides or shows the stage.
        /// </summary>
        internal static string HIDE_FIELD {
            get {
                return ResourceManager.GetString("HIDE_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the specified player to look at the specified position.
        /// </summary>
        internal static string LOOK_ANIM {
            get {
                return ResourceManager.GetString("LOOK_ANIM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays a lyric from the PV DB by the number.
        /// </summary>
        internal static string LYRIC {
            get {
                return ResourceManager.GetString("LYRIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the visibility of the specified player.
        /// </summary>
        internal static string MIKU_DISP {
            get {
                return ResourceManager.GetString("MIKU_DISP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moves the specified player to the specified position.
        /// </summary>
        internal static string MIKU_MOVE {
            get {
                return ResourceManager.GetString("MIKU_MOVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rotates the specified player to the specified orientation.
        /// </summary>
        internal static string MIKU_ROT {
            get {
                return ResourceManager.GetString("MIKU_ROT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the shadow visibility of the specified player.
        /// </summary>
        internal static string MIKU_SHADOW {
            get {
                return ResourceManager.GetString("MIKU_SHADOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the specified player to animate the mouth with the specified animation.
        /// </summary>
        internal static string MOUTH_ANIM {
            get {
                return ResourceManager.GetString("MOUTH_ANIM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moves the camera across 2 points over a certain time period.
        /// </summary>
        internal static string MOVE_CAMERA {
            get {
                return ResourceManager.GetString("MOVE_CAMERA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offsets the stage?.
        /// </summary>
        internal static string MOVE_FIELD {
            get {
                return ResourceManager.GetString("MOVE_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the display state of the movie layer.
        /// </summary>
        internal static string MOVIE_DISP {
            get {
                return ResourceManager.GetString("MOVIE_DISP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starts playing the movie file.
        /// </summary>
        internal static string MOVIE_PLAY {
            get {
                return ResourceManager.GetString("MOVIE_PLAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starts playing the music file.
        /// </summary>
        internal static string MUSIC_PLAY {
            get {
                return ResourceManager.GetString("MUSIC_PLAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the camera nearclip?.
        /// </summary>
        internal static string NEAR_CLIP {
            get {
                return ResourceManager.GetString("NEAR_CLIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No help text available..
        /// </summary>
        internal static string none {
            get {
                return ResourceManager.GetString("none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the currently played branch. 0 - common, 1 - no success, 2 - success..
        /// </summary>
        internal static string PV_BRANCH_MODE {
            get {
                return ResourceManager.GetString("PV_BRANCH_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of PV marker, stops interpreting commands, fades out audio.
        /// </summary>
        internal static string PV_END {
            get {
                return ResourceManager.GetString("PV_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the color saturation of the display. Amount can be specified as integer, percent (e.g. 120%) or decimal (0.5, same as 50%)..
        /// </summary>
        internal static string SATURATE {
            get {
                return ResourceManager.GetString("SATURATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performs a display fade in/out with the specified color.
        /// </summary>
        internal static string SCENE_FADE {
            get {
                return ResourceManager.GetString("SCENE_FADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plays the specified success sound effect.
        /// </summary>
        internal static string SE_EFFECT {
            get {
                return ResourceManager.GetString("SE_EFFECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the camera position?.
        /// </summary>
        internal static string SET_CAMERA {
            get {
                return ResourceManager.GetString("SET_CAMERA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selects the current character for editing.
        /// </summary>
        internal static string SET_CHARA {
            get {
                return ResourceManager.GetString("SET_CHARA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recalls a motion from the specified PVDB slot for the specified player.
        /// </summary>
        internal static string SET_MOTION {
            get {
                return ResourceManager.GetString("SET_MOTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the player&apos;s shadow height.
        /// </summary>
        internal static string SHADOWHEIGHT {
            get {
                return ResourceManager.GetString("SHADOWHEIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spawns a target on the screen.
        /// </summary>
        internal static string TARGET {
            get {
                return ResourceManager.GetString("TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the speed of the targets.
        /// </summary>
        internal static string TARGET_FLYING_TIME {
            get {
                return ResourceManager.GetString("TARGET_FLYING_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timing marker. If current time is below Timestamp, will wait until it&apos;s equal, otherwise no-op. In MikuASM, time can be specified as milliseconds, min:sec.ms, min:sec or sec.ms.
        /// </summary>
        internal static string TIME {
            get {
                return ResourceManager.GetString("TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the wind options for the specified player.
        /// </summary>
        internal static string WIND {
            get {
                return ResourceManager.GetString("WIND", resourceCulture);
            }
        }
    }
}
